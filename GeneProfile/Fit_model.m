close all

%% Program to automatically fit the velocity profiles extracted from Olivier's analysis


load('SpeedvsPos_AllTraces.mat')
Pos = FWT4_1.Pos;
Speed = FWT4_1.Speed;

PixelSize = 0.189; %microns, Normally to be removed in the final file.

% Detection of the ventral wall (VW) and dorsal wall (DW)

selvw = find(Speed==0);
diff_selvw = diff(selvw);
frontier_w = find(diff_selvw==max(diff_selvw));
VW = selvw(frontier_w);
DW = selvw(frontier_w+1);


figure
plot(Pos,Speed)
hold on
plot(Pos(VW),Speed(VW),'ro')
plot(Pos(DW),Speed(DW),'bs')


% Restriction of data to those between VW and DW

Pos_adim = Pos(VW:DW);
Speed_adim = Speed(VW:DW);
Pos_adim = fliplr(Pos_adim);
Speed_adim = fliplr(Speed_adim);

% Detection of the maximal and minimal velocity
% figure
% plot(Pos_adim,Speed_adim)
% hold on 
% 
 Max_speed = max(Speed_adim);
% Min_speed = min(Speed_adim);
% Max_Pos = find(Speed_adim == max(Speed_adim))
% Min_Pos = find(Speed_adim == min(Speed_adim))
% plot(Pos_adim(Max_Pos),Max_speed,'g^')
% plot(Pos_adim(Min_Pos),Min_speed,'gv')

% % Detection of the zero
% Abs_Speed_adim = abs(Speed_adim);
% list = find(Abs_Speed_adim < Max_speed/3);
% list1 = (list-length(Abs_Speed_adim)).^2;
% list2 = (list-1).^2;
% mult = list1.*list2;;
% P_zero = find(mult==max(mult));
% Pos_Zero = list(P_zero);
%plot(Pos_adim(Pos_Zero),0,'go')


%% Now all as before but with dimensional x scale


Pos_dim = linspace(0,length(Pos_adim)*PixelSize,length(Pos_adim));
Speed_dim = Speed(VW:DW);
Speed_dim = fliplr(Speed_dim);

% Fit with the model, i.e with a piecewise second order polynomial (two pieces)

xc = [0 0 max(Pos_dim)];
        yc = [0 0 0];
        cc = [max(Pos_dim) 0 max(Pos_dim); 0 0 0; 0 0 0];
        con = struct('xc',xc,'yc',yc,'cc',cc);
          %   addpath('/Users/ludovic.keiser/Desktop/Ludovic/Scientific projects/CerebroSpinalFluid /Article Bio-Protocol/Subfunctions/splinefit')
AA = splinefit(Pos_dim,Speed_dim,2,3,con);
PP = ppval(AA,linspace(0,max(Pos_dim),10000));

V_MMAX = max(abs(PP));
V_mean_abs = mean(abs(PP));

V_mean = abs(mean(PP));

Ratio_Mean = abs(V_mean)/V_mean_abs;
Ratio_Max = abs(V_mean)/V_MMAX;

FIT1=NaN;
FIT2=NaN;
if Ratio_Mean > 0.30
WARNING = strcat('WARNING : the flow is weakly bidirectional. The fraction of the total flow rate that is bidirectional is as low as ',num2str(round((1-Ratio_Mean)*100)),...
    '%. We thereby do not advise to fit the velocity profile with the model developed in Thouvenin \textit{et al.} (eLife 2020)');   
FIT1=menu({WARNING,'Do you want to stop the analysis, or to fit anyway ?'},'Stop here','Fit anyway');

%There should be two button following the question : 'Do you want to stop
%the analysis, or to fit anyway ? Proposing a choice between 'Stop here'
% and 'Fit anyway'.

else
    
VALIDATION = strcat('The flow is mainly bidirectional (',num2str(round((1-Ratio_Mean)*100)),'% of the flow rate) and could be fitted by the model developed in Thouvenin et al. (eLife 2020)');    

FIT2 = menu(VALIDATION,'Yes','No');
end

% Depending on the choice made by the user, there would be this part, or
% not

if FIT1==2||FIT2 == 1
figure
plot(Pos_dim,Speed_dim,'o','markerfacecolor','red','markeredgecolor','black')
hold on
plot(linspace(0,max(Pos_dim),10000),PP,'color','blue','linewidth',2)
set(gca,'fontsize',20)
xlabel('Dorso-Ventral position ($\mu$m)','interpreter','latex')

ylabel('Speed ($\mu$m/s)','interpreter','latex')
plot([0 max(Pos_dim)], [0 0],'black')
legend({'\textit{in vivo} measurements','Fit using equations () and () from Thouvenin \textit{et al.} (Bio-protocol, 2020)'},'interpreter','latex')
set(gcf, 'Position',  [100, 100, 1000, 800])
saveas(gcf,'Velocity_profile_fitted_with_model.svg')
saveas(gcf,'Velocity_profile_fitted_with_model.pdf')
saveas(gcf,'Velocity_profile_fitted_with_model.fig')
saveas(gcf,'Velocity_profile_fitted_with_model.png')

% length of the ciliary region

l_cilia = AA.breaks(2);

%volume force 
mu_CSF=10^-3; %Pa.s

f_v = abs(AA.coefs(1,1)-AA.coefs(2,1))*2*mu_CSF; 
f_v = f_v*10^6; %unit: Pa/m

frequency = inputdlg('what is the average beating frequency of the cilia (in Hz)? By default, the value of 40 Hz will be taken for the volumic force formula','Beating frequency'...
    ,1,{'40'});
frequency = str2double(frequency{:});
% The lengths should be expressed in dimensions, for now, it does not mean
%Pour l'instant en micron par s avec l'actiuelle adimensionalisation des longueurs
% anything

alpha = f_v/frequency/mu_CSF*(l_cilia*10^-6);
%Creation of a textfile which recap everything extracted from the fit

fileID = fopen('Fit_results.txt','w');
fprintf(fileID,'The force per unit volume generated by the cilia leading to a flow can be approximated to a value of about %6.0f N.m^{-3} \n\n\n', f_v);
fprintf(fileID,'This volumic force corresponds, for a unique cilia, to a force of about   %6.2f pN \n\n\n', f_v*(2*l_cilia*10^(-6))^3*10^12);

fprintf(fileID,'The width of the ciliary region is estimated to be about %6.1f microns \n\n\n', l_cilia);

fprintf(fileID,'The volumic force can be expressed as in equation (X) of the manuscript (Thouvenin et al., Bio-protocol, 2020), \n with a proportionality factor alpha = %6.3f  \n', alpha);
fprintf(fileID,'As a comparison, for the zebrafish embryos analyzed in Thouvenin et al. (eLife, 2020), a factor alpha = 0.5 was obtained \n\n');
fprintf(fileID,'The flow rate, considered as the total CSF set into motion per unit time equals about %6.3f nL/s \n\n\n',V_mean_abs*(2*l_cilia*10^-6)^2*10^12);

fclose(fileID);


end
